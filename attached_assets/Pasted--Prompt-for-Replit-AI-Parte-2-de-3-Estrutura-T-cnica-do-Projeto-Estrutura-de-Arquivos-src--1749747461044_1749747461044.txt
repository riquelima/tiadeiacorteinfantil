üß© Prompt for Replit AI ‚Äì Parte 2 de 3: Estrutura T√©cnica do Projeto
üìÅ Estrutura de Arquivos (src/)
bash
Copy
Edit
/src/
  /components/
    icons.tsx             ‚Üí Componentes funcionais de SVG e emojis
    ui.tsx                ‚Üí Componentes reutiliz√°veis: Bot√£o, Card, Input, Modal, etc.
    ImageCarousel.tsx     ‚Üí Galeria de imagens horizontal com navega√ß√£o
  /contexts/
    AppContext.tsx        ‚Üí Estado global: tema, autentica√ß√£o, configura√ß√£o, notifica√ß√µes
  /hooks/
    useLocalStorage.ts    ‚Üí Hook para persist√™ncia e sincroniza√ß√£o de dados
  /pages/
    AdminLayout.tsx       ‚Üí Layout principal da √°rea administrativa
    LandingPage.tsx       ‚Üí P√°gina p√∫blica inicial
    LoginPage.tsx         ‚Üí Tela de login
    /admin/
      AdminDashboard.tsx
      SchedulingPage.tsx
      ClientsPage.tsx
      FinancialsPage.tsx
      FollowUpPage.tsx
      TesourinhaPage.tsx    ‚Üê Nova p√°gina de anota√ß√µes
      SettingsPage.tsx
  App.tsx                 ‚Üí Roteador e l√≥gica principal do app
  index.tsx              ‚Üí Ponto de entrada React
  constants.ts           ‚Üí Constantes globais da aplica√ß√£o
  types.ts               ‚Üí Tipagens TypeScript da aplica√ß√£o
  utils/helpers.ts       ‚Üí Fun√ß√µes utilit√°rias
üìò Tipagens (types.ts)
Client:

id, childName, responsibleName, address, birthdate, phone, email?, lastServiceDate?, notes?, serviceCount

AppointmentLocation: enum ‚Üí 'Domic√≠lio' | 'Sal√£o'

AppointmentStatus: union ‚Üí 'pending' | 'confirmed' | 'completed' | 'missed' | 'cancelled'

Appointment: inclui clientName, date, location, status, notes, serviceValue

FinancialRecord: id, appointmentId, date, amount, description

AppConfig: stylistName, serviceDescription, homeServiceDays, salonAddress, whatsAppNumber, adminPassword

Theme: 'light' | 'dark'

TesourinhaEntry: date, note

GroundingChunk: campos opcionais para futuras integra√ß√µes de IA

üß† Contexto Global (AppContext.tsx)
AppContextType:

theme, toggleTheme()

isAuthenticated, login(password), logout()

config, updateConfig(newConfig)

showNotification(message, type?)

AppProvider:

Usa useLocalStorage para manter estados.

Autentica√ß√£o baseada em compara√ß√£o de senha com config.adminPassword.

Mostra notifica√ß√µes tempor√°rias no canto superior direito.

üíæ Hook Personalizado: useLocalStorage
API: useLocalStorage<T>(key: string, initialValue: T)

Permite persist√™ncia de estado com sincroniza√ß√£o entre abas.

Implementa fallback em erro de JSON.

Observa eventos de storage no navegador.

üîê Constantes Globais (constants.ts)
APP_NAME = "Sal√£o Infantil Encantado"

DEFAULT_STYLIST_NAME = "Tia D√©a | Sal√£o M√≥vel Infantil"

DEFAULT_SERVICE_DESCRIPTION = "Cortes divertidos e estilosos para a crian√ßada, no conforto do seu lar ou em nosso espa√ßo!"

DEFAULT_HOME_SERVICE_DAYS = [1, 2] ‚Üí Segunda e Ter√ßa

DEFAULT_SALON_ADDRESS = "Rua da Alegria, 123 - Bairro Feliz (Consulte sobre atendimento m√≥vel)"

DEFAULT_WHATSAPP_NUMBER = "5511912345678"

ADMIN_DEFAULT_PASSWORD = "1234"

LOCAL_STORAGE_KEYS: THEME_KEY, AUTH_KEY, CONFIG_KEY, CLIENTS_KEY, APPOINTMENTS_KEY, FINANCIALS_KEY, FOLLOWUP_DAYS_KEY, FOLLOWUP_TEMPLATE_KEY, TESOURINHA_KEY

DAYS_OF_WEEK = ["Domingo", "Segunda", ..., "S√°bado"]

DEFAULT_FOLLOWUP_MESSAGE: inclui placeholders {cliente} e {pronome}

üõ†Ô∏è Fun√ß√µes Utilit√°rias (helpers.ts)
formatDate(dateString, includeTime?)

formatCurrency(value?)

generateId()

exportToCSV<T>(data, filename, columns)

getDayOfWeek(dateString)

isFutureDate(dateString)

getMonthName(index)

getWhatsAppLink(phone, message?)

isClientRecent(lastServiceDate?) ‚Üí √öltimos 7 dias

isClientOverdueForReturn(lastServiceDate?, daysThreshold?)

getStatusLabel(status) ‚Üí retorna label amig√°vel em portugu√™s

